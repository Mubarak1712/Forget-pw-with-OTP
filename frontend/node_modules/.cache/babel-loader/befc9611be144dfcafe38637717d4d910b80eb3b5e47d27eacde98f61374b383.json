{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mubarak\\\\Downloads\\\\forget-password-otp-project\\\\frontend\\\\src\\\\resetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [step, setStep] = useState(1);\n  const [message, setMessage] = useState(\"\");\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  // Send OTP to user's email\n  const handleSendOTP = async () => {\n    try {\n      const res = await fetch(`${process.env.REACT_APP_BACKEND}/send-otp`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await res.text();\n      setMessage(data);\n      if (res.ok) setStep(2);\n    } catch (error) {\n      setMessage(\"Failed to send OTP. Try again.\");\n    }\n  };\n\n  // Verify OTP and update password\n  const handleVerifyOTP = async () => {\n    try {\n      const res = await fetch(`${process.env.REACT_APP_BACKEND}/verify-otp`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          otp,\n          newPassword\n        })\n      });\n      const data = await res.text();\n      if (res.ok) {\n        setIsSuccess(true);\n        setMessage(data);\n      } else {\n        setMessage(data);\n      }\n    } catch (error) {\n      setMessage(\"Verification failed. Try again.\");\n    }\n  };\n\n  // Success screen after reset\n  if (isSuccess) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"success-text\",\n        children: \"\\uD83C\\uDF89 Password Reset Successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/mail.png\",\n        className: \"celebrate-img\",\n        alt: \"Success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Main form UI\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"main-title\",\n      children: \"Reset Your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), step === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendOTP,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter New Password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyOTP,\n        children: \"Verify & Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"17x1zBwBkXuypwXf25vabaLuAJ8=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ResetPassword","_s","email","setEmail","otp","setOtp","newPassword","setNewPassword","step","setStep","message","setMessage","isSuccess","setIsSuccess","handleSendOTP","res","fetch","process","env","REACT_APP_BACKEND","method","headers","body","JSON","stringify","data","text","ok","error","handleVerifyOTP","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mubarak/Downloads/forget-password-otp-project/frontend/src/resetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './App.css';\r\n\r\nfunction ResetPassword() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [step, setStep] = useState(1);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n  // Send OTP to user's email\r\n  const handleSendOTP = async () => {\r\n    try {\r\n      const res = await fetch(`${process.env.REACT_APP_BACKEND}/send-otp`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      const data = await res.text();\r\n      setMessage(data);\r\n      if (res.ok) setStep(2);\r\n    } catch (error) {\r\n      setMessage(\"Failed to send OTP. Try again.\");\r\n    }\r\n  };\r\n\r\n  // Verify OTP and update password\r\n  const handleVerifyOTP = async () => {\r\n    try {\r\n      const res = await fetch(`${process.env.REACT_APP_BACKEND}/verify-otp`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, otp, newPassword }),\r\n      });\r\n\r\n      const data = await res.text();\r\n      if (res.ok) {\r\n        setIsSuccess(true);\r\n        setMessage(data);\r\n      } else {\r\n        setMessage(data);\r\n      }\r\n    } catch (error) {\r\n      setMessage(\"Verification failed. Try again.\");\r\n    }\r\n  };\r\n\r\n  // Success screen after reset\r\n  if (isSuccess) {\r\n    return (\r\n      <div className=\"page\">\r\n        <h2 className=\"success-text\">ðŸŽ‰ Password Reset Successfully!</h2>\r\n        <img src=\"/mail.png\" className=\"celebrate-img\" alt=\"Success\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Main form UI\r\n  return (\r\n    <div className=\"page\">\r\n      <h2 className=\"main-title\">Reset Your Password</h2>\r\n\r\n      {step === 1 ? (\r\n        <>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <br />\r\n          <button onClick={handleSendOTP}>Send OTP</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n          />\r\n          <br />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter New Password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n          />\r\n          <br />\r\n          <button onClick={handleVerifyOTP}>Verify & Reset</button>\r\n        </>\r\n      )}\r\n\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}