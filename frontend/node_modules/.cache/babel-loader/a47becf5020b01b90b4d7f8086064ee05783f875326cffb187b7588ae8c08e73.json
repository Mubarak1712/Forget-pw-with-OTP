{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mubarak\\\\Downloads\\\\forget-password-otp-project\\\\frontend\\\\src\\\\resetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [sent, setSent] = useState(false);\n  const [verified, setVerified] = useState(false);\n  const [timer, setTimer] = useState(60);\n  const [canResend, setCanResend] = useState(false);\n  const [newPassword, setNewPassword] = useState(\"\");\n  useEffect(() => {\n    let interval;\n    if (sent && timer > 0) {\n      interval = setInterval(() => setTimer(t => t - 1), 1000);\n    } else if (timer === 0) {\n      setCanResend(true);\n    }\n    return () => clearInterval(interval);\n  }, [sent, timer]);\n  const sendOtp = async () => {\n    try {\n      const res = await fetch(`${process.env.REACT_APP_BACKEND}/send-otp`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await res.json();\n      if (data.success) {\n        alert(\"OTP sent!\");\n        setSent(true);\n        setTimer(60);\n        setCanResend(false);\n      } else alert(\"Failed to send OTP\");\n    } catch (e) {\n      alert(\"Error sending OTP\");\n    }\n  };\n  const verifyOtp = async () => {\n    try {\n      const res = await fetch(`${process.env.REACT_APP_BACKEND}/verify-otp`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          otp\n        })\n      });\n      const data = await res.json();\n      if (data.success) {\n        alert(\"OTP Verified!\");\n        setVerified(true);\n      } else alert(\"Invalid OTP or expired\");\n    } catch (e) {\n      alert(\"Verification error\");\n    }\n  };\n  const resetPassword = async () => {\n    try {\n      const res = await fetch(`${process.env.REACT_APP_BACKEND}/reset-password`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          newPassword\n        })\n      });\n      const data = await res.json();\n      if (data.success) {\n        alert(\"Password reset successful!\");\n        // Clear form\n        setEmail(\"\");\n        setOtp(\"\");\n        setNewPassword(\"\");\n        setSent(false);\n        setVerified(false);\n        // Navigate to celebration page\n        navigate(\"/success\");\n      } else alert(\"Reset failed\");\n    } catch (e) {\n      alert(\"Reset error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), !sent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendOtp,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : !verified ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: timer > 0 ? `Enter OTP (${timer}s)` : \"OTP expired. Resend?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: verifyOtp,\n        disabled: timer === 0,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), canResend && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendOtp,\n        children: \"Resend OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter new password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetPassword,\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"XVAbK67CD+Q8NRLBlIyUEA3EFSY=\", false, function () {\n  return [useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ResetPassword","_s","navigate","email","setEmail","otp","setOtp","sent","setSent","verified","setVerified","timer","setTimer","canResend","setCanResend","newPassword","setNewPassword","interval","setInterval","t","clearInterval","sendOtp","res","fetch","process","env","REACT_APP_BACKEND","method","headers","body","JSON","stringify","data","json","success","alert","e","verifyOtp","resetPassword","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Mubarak/Downloads/forget-password-otp-project/frontend/src/resetPassword.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ResetPassword = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [sent, setSent] = useState(false);\r\n  const [verified, setVerified] = useState(false);\r\n  const [timer, setTimer] = useState(60);\r\n  const [canResend, setCanResend] = useState(false);\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (sent && timer > 0) {\r\n      interval = setInterval(() => setTimer((t) => t - 1), 1000);\r\n    } else if (timer === 0) {\r\n      setCanResend(true);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [sent, timer]);\r\n\r\n  const sendOtp = async () => {\r\n    try {\r\n      const res = await fetch(`${process.env.REACT_APP_BACKEND}/send-otp`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n      const data = await res.json();\r\n      if (data.success) {\r\n        alert(\"OTP sent!\");\r\n        setSent(true);\r\n        setTimer(60);\r\n        setCanResend(false);\r\n      } else alert(\"Failed to send OTP\");\r\n    } catch (e) {\r\n      alert(\"Error sending OTP\");\r\n    }\r\n  };\r\n\r\n  const verifyOtp = async () => {\r\n    try {\r\n      const res = await fetch(`${process.env.REACT_APP_BACKEND}/verify-otp`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, otp }),\r\n      });\r\n      const data = await res.json();\r\n      if (data.success) {\r\n        alert(\"OTP Verified!\");\r\n        setVerified(true);\r\n      } else alert(\"Invalid OTP or expired\");\r\n    } catch (e) {\r\n      alert(\"Verification error\");\r\n    }\r\n  };\r\n\r\n  const resetPassword = async () => {\r\n    try {\r\n      const res = await fetch(`${process.env.REACT_APP_BACKEND}/reset-password`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, newPassword }),\r\n      });\r\n      const data = await res.json();\r\n      if (data.success) {\r\n        alert(\"Password reset successful!\");\r\n        // Clear form\r\n        setEmail(\"\");\r\n        setOtp(\"\");\r\n        setNewPassword(\"\");\r\n        setSent(false);\r\n        setVerified(false);\r\n        // Navigate to celebration page\r\n        navigate(\"/success\");\r\n      } else alert(\"Reset failed\");\r\n    } catch (e) {\r\n      alert(\"Reset error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <h2>Reset Password</h2>\r\n      {!sent ? (\r\n        <>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <br />\r\n          <button onClick={sendOtp}>Send OTP</button>\r\n        </>\r\n      ) : !verified ? (\r\n        <>\r\n          <p>{timer > 0 ? `Enter OTP (${timer}s)` : \"OTP expired. Resend?\"}</p>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter OTP\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n          />\r\n          <br />\r\n          <button onClick={verifyOtp} disabled={timer === 0}>\r\n            Verify OTP\r\n          </button>\r\n          {canResend && <button onClick={sendOtp}>Resend OTP</button>}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter new password\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n          />\r\n          <br />\r\n          <button onClick={resetPassword}>Reset Password</button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}