{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mubarak\\\\Downloads\\\\forget-password-otp-project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Howl } from 'howler';\nimport mailSound from './src/mail-sound.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const playSound = () => {\n    const sound = new Howl({\n      src: [mailSound]\n    });\n    sound.play();\n  };\n  const handleSendOTP = async () => {\n    try {\n      const res = await fetch('http://localhost:5000/send-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await res.text();\n      if (res.ok) {\n        setMessage('‚úÖ OTP sent successfully!');\n        playSound();\n      } else {\n        setMessage('‚ùå Failed to send OTP.');\n      }\n    } catch (err) {\n      console.error(err);\n      setMessage('‚ùå Error occurred.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uD83D\\uDD10 OTP Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Enter your email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendOTP,\n      children: \"Send OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mxdRTHxkiTeLOv2akPbesFCh75U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Howl","mailSound","jsxDEV","_jsxDEV","App","_s","email","setEmail","message","setMessage","playSound","sound","src","play","handleSendOTP","res","fetch","method","headers","body","JSON","stringify","data","text","ok","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Mubarak/Downloads/forget-password-otp-project/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { Howl } from 'howler';\nimport mailSound from './src/mail-sound.mp3';\n\nfunction App() {\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n\n  const playSound = () => {\n    const sound = new Howl({ src: [mailSound] });\n    sound.play();\n  };\n\n  const handleSendOTP = async () => {\n    try {\n      const res = await fetch('http://localhost:5000/send-otp', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email }),\n      });\n\n      const data = await res.text();\n\n      if (res.ok) {\n        setMessage('‚úÖ OTP sent successfully!');\n        playSound();\n      } else {\n        setMessage('‚ùå Failed to send OTP.');\n      }\n    } catch (err) {\n      console.error(err);\n      setMessage('‚ùå Error occurred.');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>üîê OTP Verification</h1>\n      <input\n        type=\"email\"\n        placeholder=\"Enter your email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <button onClick={handleSendOTP}>Send OTP</button>\n      {message && <p style={{ marginTop: '20px' }}>{message}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAClB,SAASC,IAAI,QAAQ,QAAQ;AAC7B,OAAOC,SAAS,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,KAAK,GAAG,IAAIX,IAAI,CAAC;MAAEY,GAAG,EAAE,CAACX,SAAS;IAAE,CAAC,CAAC;IAC5CU,KAAK,CAACE,IAAI,CAAC,CAAC;EACd,CAAC;EAED,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QACxDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEf;QAAM,CAAC;MAChC,CAAC,CAAC;MAEF,MAAMgB,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAE7B,IAAIR,GAAG,CAACS,EAAE,EAAE;QACVf,UAAU,CAAC,0BAA0B,CAAC;QACtCC,SAAS,CAAC,CAAC;MACb,CAAC,MAAM;QACLD,UAAU,CAAC,uBAAuB,CAAC;MACrC;IACF,CAAC,CAAC,OAAOgB,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;MAClBhB,UAAU,CAAC,mBAAmB,CAAC;IACjC;EACF,CAAC;EAED,oBACEN,OAAA;IAAKyB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB1B,OAAA;MAAA0B,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B9B,OAAA;MACE+B,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAE9B,KAAM;MACb+B,QAAQ,EAAGC,CAAC,IAAK/B,QAAQ,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACF9B,OAAA;MAAQqC,OAAO,EAAE1B,aAAc;MAAAe,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAChDzB,OAAO,iBAAIL,OAAA;MAAGsC,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAb,QAAA,EAAErB;IAAO;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV;AAAC5B,EAAA,CA5CQD,GAAG;AAAAuC,EAAA,GAAHvC,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}