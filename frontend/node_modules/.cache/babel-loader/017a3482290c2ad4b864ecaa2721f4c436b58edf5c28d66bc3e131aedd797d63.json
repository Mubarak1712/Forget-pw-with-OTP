{"ast":null,"code":"import React,{useState}from\"react\";import\"./App.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ResetPassword(){const[email,setEmail]=useState(\"\");const[otpSent,setOtpSent]=useState(false);const[otp,setOtp]=useState(\"\");const[newPassword,setNewPassword]=useState(\"\");const sendOtp=async e=>{e.preventDefault();try{const response=await fetch(\"\".concat(process.env.REACT_APP_BACKEND_URL,\"/send-otp\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email})});const data=await response.text();if(response.ok){console.log(\"✅ OTP sent:\",data);new Audio(process.env.PUBLIC_URL+\"/send.mp3\").play();// ✅ play send sound\nsetOtpSent(true);// show OTP entry form\nalert(\"OTP sent successfully!\");}else{console.error(\"❌ Error sending OTP:\",data);alert(\"Failed to send OTP: \"+data);}}catch(error){console.error(\"❌ Error:\",error);alert(\"Something went wrong. Please try again later.\");}};const verifyOtp=async e=>{e.preventDefault();try{const response=await fetch(\"\".concat(process.env.REACT_APP_BACKEND_URL,\"/verify-otp\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({email,otp,newPassword})});const data=await response.text();if(response.ok){console.log(\"✅ Password reset successful!\");new Audio(process.env.PUBLIC_URL+\"/success.mp3\").play();// ✅ play success sound\nalert(\"✅ Password reset successful!\");window.location.href=\"/\";// redirect to homepage\n}else{console.error(\"❌ Error verifying OTP:\",data);alert(\"Failed to verify OTP: \"+data);}}catch(error){console.error(\"❌ Error:\",error);alert(\"Something went wrong. Please try again later.\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"page\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"reset-heading\",children:\"Reset Your Password\"}),!otpSent?/*#__PURE__*/_jsxs(\"form\",{onSubmit:sendOtp,children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Enter your email\",className:\"email-input\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"reset-button\",children:\"Send OTP\"})]}):/*#__PURE__*/_jsxs(\"form\",{onSubmit:verifyOtp,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter OTP\",className:\"otp-input\",value:otp,onChange:e=>setOtp(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Enter New Password\",className:\"password-input\",value:newPassword,onChange:e=>setNewPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"reset-button\",children:\"Verify & Reset Password\"})]})]});}export default ResetPassword;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","ResetPassword","email","setEmail","otpSent","setOtpSent","otp","setOtp","newPassword","setNewPassword","sendOtp","e","preventDefault","response","fetch","concat","process","env","REACT_APP_BACKEND_URL","method","headers","body","JSON","stringify","data","text","ok","console","log","Audio","PUBLIC_URL","play","alert","error","verifyOtp","window","location","href","className","children","onSubmit","type","placeholder","value","onChange","target","required"],"sources":["C:/Users/Mubarak/Downloads/forget-password-otp-project/frontend/src/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction ResetPassword() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n\r\n  const sendOtp = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/send-otp`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      const data = await response.text();\r\n\r\n      if (response.ok) {\r\n        console.log(\"✅ OTP sent:\", data);\r\n        new Audio(process.env.PUBLIC_URL + \"/send.mp3\").play(); // ✅ play send sound\r\n        setOtpSent(true);  // show OTP entry form\r\n        alert(\"OTP sent successfully!\");\r\n      } else {\r\n        console.error(\"❌ Error sending OTP:\", data);\r\n        alert(\"Failed to send OTP: \" + data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Error:\", error);\r\n      alert(\"Something went wrong. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  const verifyOtp = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/verify-otp`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, otp, newPassword }),\r\n      });\r\n\r\n      const data = await response.text();\r\n\r\n      if (response.ok) {\r\n        console.log(\"✅ Password reset successful!\");\r\n        new Audio(process.env.PUBLIC_URL + \"/success.mp3\").play(); // ✅ play success sound\r\n        alert(\"✅ Password reset successful!\");\r\n        window.location.href = \"/\"; // redirect to homepage\r\n      } else {\r\n        console.error(\"❌ Error verifying OTP:\", data);\r\n        alert(\"Failed to verify OTP: \" + data);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"❌ Error:\", error);\r\n      alert(\"Something went wrong. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <h1 className=\"reset-heading\">Reset Your Password</h1>\r\n      {!otpSent ? (\r\n        <form onSubmit={sendOtp}>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            className=\"email-input\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"reset-button\">Send OTP</button>\r\n        </form>\r\n      ) : (\r\n        <form onSubmit={verifyOtp}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter OTP\"\r\n            className=\"otp-input\"\r\n            value={otp}\r\n            onChange={(e) => setOtp(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter New Password\"\r\n            className=\"password-input\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\" className=\"reset-button\">Verify & Reset Password</button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}